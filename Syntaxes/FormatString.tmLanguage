<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>
		\\, \$, \(
		\n, \t
		\U, \L, \E, \u, \l

		$0-n | $foo

		${«var»:[/upcase][/downcase][/(capitalize|titlecase)][/asciify]}

		${«var»:?«if»:«else»}

		${«var»:+«if»}
		${«var»:-«else»}
		${«var»:«else»}

		${«var»/«regexp»/«format»/[giems]}

		(?«var»:«if»:«else»)
		(?«var»:«if»)
	</string>
	<key>fileTypes</key>
	<array/>
	<key>hideFromUser</key>
	<true/>
	<key>name</key>
	<string>Format String</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>\\[\\$(nt]</string>
			<key>name</key>
			<string>constant.character.escape.format-string</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\\[ULEul]</string>
			<key>name</key>
			<string>constant.other.reference.format-string</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.variable.begin.format-string</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>$0-n | $foo</string>
			<key>match</key>
			<string>(\$)(?:\d+|\w+)</string>
			<key>name</key>
			<string>variable.other.readwrite.format-string</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.transform.begin.format-string</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.transform.format-string</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unknown-transform.format-string</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.transform.end.format-string</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>${«var»:[/upcase][/downcase][/(capitalize|titlecase)][/asciify]}</string>
			<key>match</key>
			<string>(\$\{)\w+(:/)(?:upcase|downcase|capitalize|titlecase|asciify|(.*?))(\})</string>
			<key>name</key>
			<string>variable.other.transform.format-string</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\$\{)\w+(:\?)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.condition.begin.format-string</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.condition.format-string</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>${«var»:?«if»:«else»}</string>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.condition.end.format-string</string>
				</dict>
			</dict>
			<key>name</key>
			<string>variable.other.condition.binary.format-string</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[:}]</string>
					<key>name</key>
					<string>constant.character.escape.format-string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>textmate.format-string</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>:</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.condition.format-string</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\})</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\[}]</string>
							<key>name</key>
							<string>constant.character.escape.format-string</string>
						</dict>
						<dict>
							<key>include</key>
							<string>textmate.format-string</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\$\{)\w+(:[-+]?)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.condition.begin.format-string</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.condition.format-string</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>${«var»:+«if»} | ${«var»:-«else»} | ${«var»:«else»}</string>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.condition.end.format-string</string>
				</dict>
			</dict>
			<key>name</key>
			<string>variable.other.condition.unary.format-string</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\}</string>
					<key>name</key>
					<string>constant.character.escape.format-string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>textmate.format-string</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\$\{)\w+(/)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.replacement.begin.format-string</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.replacement.format-string</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>${«var»/«regexp»/«format»/[giems]}</string>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.replacement.end.format-string</string>
				</dict>
			</dict>
			<key>name</key>
			<string>variable.other.replacement.format-string</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\/</string>
					<key>name</key>
					<string>constant.character.escape.format-string</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.regexp.oniguruma</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.replacement.format-string</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(/)([a-z]*)(?=\})</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.replacement.format-string</string>
						</dict>
						<key>2</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>[^giems]+</string>
									<key>name</key>
									<string>invalid.illegal.unknown-option.format-string</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\/</string>
							<key>name</key>
							<string>constant.character.escape.format-string</string>
						</dict>
						<dict>
							<key>include</key>
							<string>textmate.format-string</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\(\?\d+:</string>
			<key>comment</key>
			<string>(?«var»:«if»:«else») | (?«var»:«if»)</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>invalid.deprecated.condition.format-string</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>textmate.format-string</string>
	<key>uuid</key>
	<string>405875FC-5E62-41EE-9303-FAE078694E63</string>
</dict>
</plist>
